{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulif\\\\Documents\\\\estudos\\\\react\\\\ambiente-curso\\\\meuapp\\\\src\\\\App.jsx\";\nimport React from 'react';\n\n// function App() {\n//   return   <a className=\"ativo\" href=\"https://www.instagram.com/gunagai\">Instagram </a>\n// }\n\n// <React.Fragment>/<>:\n\n// const App = () =>{\n//   return (\n//   <>    \n//   <label htmlFor=\"nome\">Nome</label>\n//   <input type=\"text\" id=\"nome\" />\n//   </>\n//   )\n// Pode ser <> ou <React.Fragment>, é a mesma coisa\n// }\n\n// camelCase:\n\n// const App = () => {\n//   return <video autoPlay/>\n// }\n\n// Expressões e variáveis:\n\n// const App = () =>{\n//   const nome = 'Guli'\n//   return <p>{nome}</p>\n// }\n\n// const App = () =>{\n//  const desconto = 50\n//  const preco = 500\n//  return <p>{preco - desconto}</p> \n// }\n\n// const App = () =>{\n//   const ativo = true\n//   return <p className={ativo ? 'ativo' : 'inativo'}></p>  \n// }\n\n// const titulo = <h1>Titulo do texto</h1>\n\n// const App = () =>{\n//  return <div>{titulo}</div> \n// }\n\n// Propriedades de objetos, e retornos de funções usando callback(devem ser string, numero ou array de strings/numeros para aparecer na tela. Valores booleanos, undefined e null não aparecem na tela):\n\n// const App = () =>{\n//   function nome() {\n//   return 'Gustavo'\n//   }\n//   function soma(x) {\n//     return x + x\n//   }\n//   const carro = {\n//     rodas: 4,\n//     marca: 'Lamborghini'\n//   }\n//   return (\n//     <div>\n//       <p>{'MINHA EMPRESA'.toLowerCase()}</p>\n//       <p>{30 % 2}</p>\n//       <p>{true}</p>\n//       <p>{undefined}</p>\n//       <p>{(() => 'Função executada')()}</p>\n//       <p>{nome()}</p>\n//       <p>{soma(6)}</p>\n//       <p>{soma(6) === 12 ? 'Soma correta' : 'Soma incorreta'}</p>\n//       <p>{soma(6) === 12 && 'Soma correta'}</p>\n//       <p>{Date.now()}</p>\n//       <p>{new Date().getFullYear()}</p>\n//       <p>marca: {carro.marca}, rodas: {carro.rodas}</p>\n//     </div>\n//   )\n// }\n\n// Style no JSX:\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const estilo = {\n    color: 'red',\n    fontSize: '2rem',\n    fontFamily: 'Arial'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: estilo,\n      children: \"Empresa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: blue\n      },\n      children: \"Venha conferir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","estilo","color","fontSize","fontFamily","children","style","fileName","_jsxFileName","lineNumber","columnNumber","blue","_c","$RefreshReg$"],"sources":["C:/Users/gulif/Documents/estudos/react/ambiente-curso/meuapp/src/App.jsx"],"sourcesContent":["import React from 'react'\n\n// function App() {\n//   return   <a className=\"ativo\" href=\"https://www.instagram.com/gunagai\">Instagram </a>\n// }\n\n// <React.Fragment>/<>:\n\n// const App = () =>{\n//   return (\n//   <>    \n//   <label htmlFor=\"nome\">Nome</label>\n//   <input type=\"text\" id=\"nome\" />\n//   </>\n//   )\n  // Pode ser <> ou <React.Fragment>, é a mesma coisa\n// }\n\n// camelCase:\n\n// const App = () => {\n//   return <video autoPlay/>\n// }\n\n// Expressões e variáveis:\n\n// const App = () =>{\n//   const nome = 'Guli'\n//   return <p>{nome}</p>\n// }\n\n// const App = () =>{\n//  const desconto = 50\n//  const preco = 500\n//  return <p>{preco - desconto}</p> \n// }\n\n// const App = () =>{\n//   const ativo = true\n//   return <p className={ativo ? 'ativo' : 'inativo'}></p>  \n// }\n\n// const titulo = <h1>Titulo do texto</h1>\n\n// const App = () =>{\n//  return <div>{titulo}</div> \n// }\n\n// Propriedades de objetos, e retornos de funções usando callback(devem ser string, numero ou array de strings/numeros para aparecer na tela. Valores booleanos, undefined e null não aparecem na tela):\n\n// const App = () =>{\n//   function nome() {\n//   return 'Gustavo'\n//   }\n//   function soma(x) {\n//     return x + x\n//   }\n//   const carro = {\n//     rodas: 4,\n//     marca: 'Lamborghini'\n//   }\n//   return (\n//     <div>\n//       <p>{'MINHA EMPRESA'.toLowerCase()}</p>\n//       <p>{30 % 2}</p>\n//       <p>{true}</p>\n//       <p>{undefined}</p>\n//       <p>{(() => 'Função executada')()}</p>\n//       <p>{nome()}</p>\n//       <p>{soma(6)}</p>\n//       <p>{soma(6) === 12 ? 'Soma correta' : 'Soma incorreta'}</p>\n//       <p>{soma(6) === 12 && 'Soma correta'}</p>\n//       <p>{Date.now()}</p>\n//       <p>{new Date().getFullYear()}</p>\n//       <p>marca: {carro.marca}, rodas: {carro.rodas}</p>\n//     </div>\n//   )\n// }\n\n// Style no JSX:\n\nconst App = () =>{\n  const estilo = {\n    color: 'red',\n    fontSize: '2rem',\n    fontFamily: 'Arial'\n  }\n  return (\n    <div>\n      <h1 style={estilo}>Empresa</h1>\n      <p style={{color:blue}}>Venha conferir</p>\n    </div>\n  )\n}\n\n\n\n\n\n\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACF;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,GAAGA,CAAA,KAAK;EACf,MAAMC,MAAM,GAAG;IACbC,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE;EACd,CAAC;EACD,oBACEL,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAIO,KAAK,EAAEL,MAAO;MAAAI,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BX,OAAA;MAAGO,KAAK,EAAE;QAACJ,KAAK,EAACS;MAAI,CAAE;MAAAN,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAAAE,EAAA,GAZKZ,GAAG;AAoBT,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}