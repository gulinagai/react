{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulif\\\\Documents\\\\estudos\\\\react\\\\ambiente-curso\\\\meuapp\\\\src\\\\App.jsx\";\nimport React from 'react';\n\n// function App() {\n//   return   <a className=\"ativo\" href=\"https://www.instagram.com/gunagai\">Instagram </a>\n// }\n\n// <React.Fragment>/<>:\n\n// const App = () =>{\n//   return (\n//   <>    \n//   <label htmlFor=\"nome\">Nome</label>\n//   <input type=\"text\" id=\"nome\" />\n//   </>\n//   )\n// Pode ser <> ou <React.Fragment>, é a mesma coisa\n// }\n\n// camelCase:\n\n// const App = () => {\n//   return <video autoPlay/>\n// }\n\n// Expressões e variáveis:\n\n// const App = () =>{\n//   const nome = 'Guli'\n//   return <p>{nome}</p>\n// }\n\n// const App = () =>{\n//  const desconto = 50\n//  const preco = 500\n//  return <p>{preco - desconto}</p> \n// }\n\n// const App = () =>{\n//   const ativo = true\n//   return <p className={ativo ? 'ativo' : 'inativo'}></p>  \n// }\n\n// const titulo = <h1>Titulo do texto</h1>\n\n// const App = () =>{\n//  return <div>{titulo}</div> \n// }\n\n// Propriedades de objetos, e retornos de funções usando callback(devem ser string, numero ou array de strings/numeros para aparecer na tela. Valores booleanos, undefined e null não aparecem na tela):\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  function nome() {\n    return 'Gustavo';\n  }\n  function soma(x) {\n    return x + x;\n  }\n  const carro = {\n    rodas: 4,\n    marca: 'Lamborghini'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","nome","soma","x","carro","rodas","marca","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gulif/Documents/estudos/react/ambiente-curso/meuapp/src/App.jsx"],"sourcesContent":["import React from 'react'\n\n// function App() {\n//   return   <a className=\"ativo\" href=\"https://www.instagram.com/gunagai\">Instagram </a>\n// }\n\n// <React.Fragment>/<>:\n\n// const App = () =>{\n//   return (\n//   <>    \n//   <label htmlFor=\"nome\">Nome</label>\n//   <input type=\"text\" id=\"nome\" />\n//   </>\n//   )\n  // Pode ser <> ou <React.Fragment>, é a mesma coisa\n// }\n\n// camelCase:\n\n// const App = () => {\n//   return <video autoPlay/>\n// }\n\n// Expressões e variáveis:\n\n// const App = () =>{\n//   const nome = 'Guli'\n//   return <p>{nome}</p>\n// }\n\n// const App = () =>{\n//  const desconto = 50\n//  const preco = 500\n//  return <p>{preco - desconto}</p> \n// }\n\n// const App = () =>{\n//   const ativo = true\n//   return <p className={ativo ? 'ativo' : 'inativo'}></p>  \n// }\n\n// const titulo = <h1>Titulo do texto</h1>\n\n// const App = () =>{\n//  return <div>{titulo}</div> \n// }\n\n// Propriedades de objetos, e retornos de funções usando callback(devem ser string, numero ou array de strings/numeros para aparecer na tela. Valores booleanos, undefined e null não aparecem na tela):\n\nconst App = () =>{\n  function nome() {\n  return 'Gustavo'\n  }\n  function soma(x) {\n    return x + x\n  }\n  const carro = {\n    rodas: 4,\n    marca: 'Lamborghini'\n  }\n  return (\n    <div>\n      <p></p>\n    </div>\n  )\n\n}\n\n\n\n\n\n\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACF;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,GAAGA,CAAA,KAAK;EACf,SAASC,IAAIA,CAAA,EAAG;IAChB,OAAO,SAAS;EAChB;EACA,SAASC,IAAIA,CAACC,CAAC,EAAE;IACf,OAAOA,CAAC,GAAGA,CAAC;EACd;EACA,MAAMC,KAAK,GAAG;IACZC,KAAK,EAAE,CAAC;IACRC,KAAK,EAAE;EACT,CAAC;EACD,oBACEP,OAAA;IAAAQ,QAAA,eACER,OAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGV,CAAC;AAAAC,EAAA,GAjBKZ,GAAG;AAyBT,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}